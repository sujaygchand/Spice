@model Spice.Models.ViewModels.OrderListViewModel
@using Spice.Utilities

@{
	ViewData["Title"] = "Order Pickup";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="get">
	<br />
	<br />
	<h2 class="text-info"> Orders Ready for Pickup :</h2>
	<div class="border backgroundWhite">
		<div class="row container">
			<div class="col-11">
				<div class="row" style="padding-top:10px">
					<div class="col-4">
						@Html.Editor("searchName", new { htmlAttributes = new { @class = "form-control", @placeholder = "Name..." } })
					</div>
					<div class="col-4">
						@Html.Editor("searchPhone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone..." } })
					</div>
					<div class="col-4">
						@Html.Editor("searchEmail", new { htmlAttributes = new { @class = "form-control", @placeholder = "Email..." } })
					</div>
				</div>
			</div>
			<div class="col-1">
				<div class="row" style="padding-top:10px">
					<button type="submit" name="submit" value="Search" class="btn btn-info form-control">
					<i class="fas fa-search"></i>
					</button>
				</div>
			</div>

		</div>
		<br />
		<div>
			@if (Model.Orders.Count() > 0)
			{
				<table class="table table-striped border">
					<tr class="table-secondary">
						<th>
							@Html.DisplayNameFor(k => k.Orders[0].OrderHeader.Id)
						</th>
						<th>
							@Html.DisplayNameFor(k => k.Orders[0].OrderHeader.PickupName)
						</th>
						<th>
							@Html.DisplayNameFor(k => k.Orders[0].OrderHeader.ApplicationUser.Email)
						</th>
						<th>
							@Html.DisplayNameFor(k => k.Orders[0].OrderHeader.PickUpTime)
						</th>
						<th>
							@Html.DisplayNameFor(k => k.Orders[0].OrderHeader.OrderTotal)
						</th>
						<th>
							Total Time
						</th>
						<th></th>
					</tr>

					@foreach (var item in Model.Orders)
					{
						<tr>
							<td>
								@Html.DisplayFor(k => item.OrderHeader.Id)
							</td>
							<td>
								@Html.DisplayFor(k => item.OrderHeader.PickupName)
							</td>
							<td>
								@Html.DisplayFor(k => item.OrderHeader.ApplicationUser.Email)
							</td>
							<td>
								@Html.DisplayFor(k => item.OrderHeader.PickUpTime)
							</td>
							<td>
								@Html.DisplayFor(k => item.OrderHeader.OrderTotal)
							</td>
							<td>
								@Html.DisplayFor(k => item.OrderDetails.Count)
							</td>

							<td>
								<button type="button" class="btn btn-success btnOrderDetail" data-id="@item.OrderHeader.Id" data-toggle="modal">
									<i class="far fa-list-alt"></i>&nbsp;Details
								</button>
							</td>
						</tr>
					}
				</table>
				<div page-model="@Model.PagingInfo" page-classes-enabled="true" page-class="btn border"
					 page-class-normal="btn btn-light" page-class-selected="btn btn-info active"
					 class="btn-group float-right">
				</div>
				<br />
			}
			else
			{
				<p>No category exists...</p>
			}
		</div>
	</div>
</form>
	<div class="modal fade" id="myOrderDetails" tabindex="-1" role="dialog" aria-hidden="true">
		<div class="modal-dialog-centered modal-dialog modal-lg" role="document">
			<div class="modal-content">
				<div class="modal-header bg-success text-light">
					<div class="col-10 offset-1">
						<h5 class="modal-title align-content-center">Order Details</h5>	
					</div>
					<div class="col-1">
						<button type="button" class="float-right btn-outline-secondary close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					</div>
				<div class="modal-body justify-content-center" id="myOrderDetailsContent">

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" style="width:20%" data-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>


@section Scripts
{
	<script>
    var OrderDetailsURL = '/Customer/Order/GetOrderDetails';

     $(".btnOrderDetail").click(function () {
         
         var $buttonClicked = $(this);
         var id = $buttonClicked.attr('data-id');
         
         $.ajax({
            type: "GET",
            url: OrderDetailsURL,
            contentType: "application/json; charset=utf-8",
            data: {"Id": id},
            cache: false,
            dataType: "html",
            success: function (data){
              $('#myOrderDetailsContent').html(data);
              $('#myOrderDetails').modal('show');
            },
            error: function () {
                alert("Dynamic content load failed")                    
            }    
         });
     });
	</script>
}